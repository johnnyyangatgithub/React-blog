{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/react-blog/src/component/UserHeader.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import { fetchUser } from '../actions';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserHeader extends React.Component {\n  // componentDidMount() {\n  //     this.props.fetchUser(this.props.userId);\n  // }\n  render() {\n    const {\n      user\n    } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: state.users.find(user => user.id === ownProps.userId)\n  };\n};\n\nexport default connect(mapStateToProps)(UserHeader);","map":{"version":3,"sources":["/Users/johnny/react-blog/src/component/UserHeader.js"],"names":["React","connect","UserHeader","Component","render","user","props","name","mapStateToProps","state","ownProps","users","find","id","userId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAErC;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAtB;;AACA,QAAI,CAACD,IAAL,EAAW;AACP,aAAO,IAAP;AACH;;AAED,wBAAO;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBA,IAAI,CAACE;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAboC;;AAcxC;;AAED,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAEL,IAAAA,IAAI,EAAEI,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBP,IAAI,IAAIA,IAAI,CAACQ,EAAL,KAAYH,QAAQ,CAACI,MAA9C;AAAR,GAAP;AACH,CAFD;;AAIA,eAAeb,OAAO,CAACO,eAAD,CAAP,CAAyBN,UAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n// import { fetchUser } from '../actions';\n\nclass UserHeader extends React.Component {\n\n    // componentDidMount() {\n    //     this.props.fetchUser(this.props.userId);\n    // }\n\n    render() {\n        const { user } = this.props;\n        if (!user) {\n            return null;\n        }\n\n        return <div className='header'>{user.name}</div>;\n    }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return { user: state.users.find(user => user.id === ownProps.userId) };\n};\n\nexport default connect(mapStateToProps)(UserHeader);"]},"metadata":{},"sourceType":"module"}