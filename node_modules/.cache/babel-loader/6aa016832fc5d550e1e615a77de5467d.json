{"ast":null,"code":"import jsonPlaceholder from '../apis/jsonPlaceholder';\nimport _ from 'lodash'; //Combined those two function together\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  const userIds = _.uniq(_.map(getState().posts, 'userId'));\n\n  userIds.forEach(id => dispatch(fetchUser(id)));\n}; //actionCreate for blog posts\n\nexport const fetchPosts = () => {\n  return async dispatch => {\n    const response = await jsonPlaceholder.get('/posts');\n    dispatch({\n      type: 'FETCH_POSTS',\n      payload: response.data\n    });\n  };\n}; //actionCreate for user-------> memoize method\n// export const fetchUser = id => dispatch => {\n//     _fetchUser(id, dispatch);\n// };\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n//     const response = await jsonPlaceholder.get(`/users/${id}`);\n//     dispatch({ type: 'FETCH_USER', payload: response.data });\n// });\n//actionCreate for user-------> refactor method\n\nexport const fetchUser = id => async dispatch => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n  dispatch({\n    type: 'FETCH_USER',\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/Users/johnny/react-blog/src/actions/index.js"],"names":["jsonPlaceholder","_","fetchPostsAndUsers","dispatch","getState","fetchPosts","userIds","uniq","map","posts","forEach","id","fetchUser","response","get","type","payload","data"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,yBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd,C,CAEA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAElE,QAAMD,QAAQ,CAACE,UAAU,EAAX,CAAd;;AAEA,QAAMC,OAAO,GAAGL,CAAC,CAACM,IAAF,CAAON,CAAC,CAACO,GAAF,CAAMJ,QAAQ,GAAGK,KAAjB,EAAwB,QAAxB,CAAP,CAAhB;;AAEAH,EAAAA,OAAO,CAACI,OAAR,CAAgBC,EAAE,IAAIR,QAAQ,CAACS,SAAS,CAACD,EAAD,CAAV,CAA9B;AACH,CAPM,C,CASP;;AACA,OAAO,MAAMN,UAAU,GAAG,MAAM;AAC5B,SAAO,MAAMF,QAAN,IAAkB;AACrB,UAAMU,QAAQ,GAAG,MAAMb,eAAe,CAACc,GAAhB,CAAoB,QAApB,CAAvB;AAEAX,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,KAAD,CAAR;AACH,GAJD;AAKH,CANM,C,CAOP;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AACA,OAAO,MAAML,SAAS,GAAGD,EAAE,IAAI,MAAMR,QAAN,IAAkB;AAC7C,QAAMU,QAAQ,GAAG,MAAMb,eAAe,CAACc,GAAhB,CAAqB,UAASH,EAAG,EAAjC,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACH,CAJM","sourcesContent":["import jsonPlaceholder from '../apis/jsonPlaceholder';\nimport _ from 'lodash';\n\n//Combined those two function together\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n\n    await dispatch(fetchPosts());\n\n    const userIds = _.uniq(_.map(getState().posts, 'userId'));\n\n    userIds.forEach(id => dispatch(fetchUser(id)));\n};\n\n//actionCreate for blog posts\nexport const fetchPosts = () => {\n    return async dispatch => {\n        const response = await jsonPlaceholder.get('/posts');\n\n        dispatch({ type: 'FETCH_POSTS', payload: response.data });\n    };\n};\n//actionCreate for user-------> memoize method\n// export const fetchUser = id => dispatch => {\n//     _fetchUser(id, dispatch);\n// };\n\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n//     const response = await jsonPlaceholder.get(`/users/${id}`);\n\n//     dispatch({ type: 'FETCH_USER', payload: response.data });\n// });\n\n//actionCreate for user-------> refactor method\nexport const fetchUser = id => async dispatch => {\n    const response = await jsonPlaceholder.get(`/users/${id}`);\n\n    dispatch({ type: 'FETCH_USER', payload: response.data });\n};\n"]},"metadata":{},"sourceType":"module"}